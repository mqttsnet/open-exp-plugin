<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.mqttsnet.thinglinks</groupId>
        <artifactId>open-exp-plugin</artifactId>
        <version>1.0.0</version>
    </parent>

    <artifactId>example-plugin-tcptomqtt</artifactId>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!-- Spring Boot Web 模块 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>3.1.2</version>
        </dependency>

        <!-- 项目的核心依赖 -->
        <dependency>
            <groupId>com.mqttsnet.thinglinks</groupId>
            <artifactId>exp-plugin-manager-springboot-starter</artifactId>
            <version>1.0.0</version>
        </dependency>

        <dependency>
            <groupId>com.mqttsnet.thinglinks</groupId>
            <artifactId>example-extension-define</artifactId>
            <version>1.0.0</version>
        </dependency>



        <!-- https://mvnrepository.com/artifact/cn.hutool/hutool-all -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.8.32</version>
        </dependency>

        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>4.1.108.Final</version> <!-- 使用最新的版本 -->
        </dependency>

        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>2.1.1</version>
            <scope>compile</scope>
        </dependency>

        <!-- Paho MQTT 客户端 -->
        <dependency>
            <groupId>org.eclipse.paho</groupId>
            <artifactId>org.eclipse.paho.client.mqttv3</artifactId>
            <version>1.2.5</version>
        </dependency>
    </dependencies>


    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/zip.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--根据实际情况修改-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.4.1</version>
                <configuration>
                    <artifactSet>
                        <includes>
                            <!--
                                include 元素的作用：
                                用于明确指定需要包含在最终 JAR 文件中的具体依赖项。
                                这里列出的依赖项（例如：com.mqttsnet.thinglinks:open-exp-plugin-depend 和 com.mqttsnet.thinglinks:example-extension-define）
                                将会被打包进最终生成的 JAR 文件中，确保这些依赖在运行时可用。
                            -->

                            <include>com.mqttsnet.thinglinks:open-exp-plugin-depend</include>
                            <include>com.mqttsnet.thinglinks:example-extension-define</include>
                        </includes>
                    </artifactSet>

                    <!--
                        createDependencyReducedPom 参数控制是否生成“依赖精简后的 POM 文件”。
                        当设置为 true 时，插件会生成一个依赖精简后的 POM 文件，该文件会去除所有被打包进 JAR 文件的依赖。
                        这样做的好处是：如果你的项目会被其他项目依赖，这可以避免下游项目出现重复依赖的问题。
                        如果设置为 false，则保留原始的 POM 文件，不生成精简后的 POM 文件。
                        适用于项目不作为依赖或不担心下游项目重复依赖的情况。
                    -->

                    <createDependencyReducedPom>true</createDependencyReducedPom>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <configuration>
                            <tasks>

                                <copy todir="../../exp-plugins">
                                    <!-- project.build.directory表示各个模块的target目录 -->
                                    <fileset dir="${project.build.directory}">
                                        <!-- 需要复制的jar包文件名称 -->
                                        <include name="${project.artifactId}-${project.version}-*.zip"/>
                                    </fileset>
                                </copy>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>